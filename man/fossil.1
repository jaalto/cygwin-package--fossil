.TH FOSSIL "1" "January 2011" "http://fossil-scm.org" "User Commands"
.SH NAME
fossil \- Distributed Version Control System
.SH SYNOPSIS
.B fossil
\fIhelp\fR
.br
.B fossil
\fIhelp COMMAND\fR
.br
.B fossil
\fICOMMAND [OPTIONS]\fR
.SH DESCRIPTION
Fossil is a distributed version control system (DVCS) with built-in
wiki, ticket tracker, CGI/http interface, and http server.

.SH Available COMMANDs:

add            co             info           rename         ticket
.br
addremove      commit         init           revert         timeline
.br
all            configuration  leaves         rm             ui
.br
annotate       deconstruct    ls             scrub          undo
.br
artifact       delete         merge          search         unset
.br
bisect         descendants    mv             server         update
.br
branch         diff           new            settings       user
.br
cgi            export         open           sha1sum        version
.br
changes        extras         pull           sqlite3        wiki
.br
checkout       finfo          push           stash          winsrv
.br
ci             gdiff          rebuild        status         zip
.br
clean          help           reconstruct    sync
.br
clone          http           redo           tag
.br
close          import         remote-url     tarball

.SH FEATURES

Features as described on the fossil home page.

.HP
1.
.B Bug Tracking And Wiki
- In addition to doing distributed version control like Git and
Mercurial, Fossil also supports distributed bug tracking, distributed
wiki, and a distributed blog mechanism all in a single integrated
package.

.HP
2.
.B Web Interface
- Fossil has a built-in and easy-to-use web interface that simplifies
project tracking and promotes situational awareness. Simply type
"fossil ui" from within any check-out and Fossil automatically opens
your web browser in a page that gives detailed graphical history and
status information on that project.

.HP
3.
.B Autosync
- Fossil supports "autosync" mode which helps to keep projects moving
forward by reducing the amount of needless forking and merging often
associated with distributed projects.

.HP
4.
.B Self-Contained
- Fossil is a single stand-alone executable that contains everything
needed to do configuration management. Installation is trivial: simply
download a precompiled binary for Linux, Mac, or Windows and put it on
your $PATH. Easy-to-compile source code is available for users on
other platforms. Fossil sources are also mostly self-contained,
requiring only the "zlib" library and the standard C library to build.

.HP
5.
.B Simple Networking
- Fossil uses plain old HTTP (with proxy support) for all network
communications, meaning that it works fine from behind restrictive
firewalls. The protocol is bandwidth efficient to the point that
Fossil can be used comfortably over a dial-up internet connection.

.HP
6.
.B CGI Enabled
- No server is required to use fossil. But a server does make
collaboration easier. Fossil supports three different yet simple
server configurations. The most popular is a 2-line CGI script. This
is the approach used by the self-hosting fossil repositories.

.HP
7.
.B Robust & Reliable
- Fossil stores content using an enduring file format in an SQLite
database so that transactions are atomic even if interrupted by a
power loss or system crash. Furthermore, automatic self-checks verify
that all aspects of the repository are consistent prior to each
commit. In over three years of operation, no work has ever been lost
after having been committed to a Fossil repository.

.SH DOCUMENTATION
http://www.fossil-scm.org/
.br
.B fossil
\fIui\fR
